package level3;

/*
    세로 2, 가로 n길이의 직사각형에 세로1, 가로 2인 타일을 배치할 때, 직사각형을 완벽히 채우도록 타일을 배치하는 경우의 수를 구하는 문제

    <나의 풀이>
    dp유형의 문제라고 가정하고, dp[k]의 의미를 찾기 위해 노력했다.
    k를 직사각형의 가로 길이라고 가정하면, dp[k]는 k길이까지 타일을 배치하는 경우의 수라고 볼 수 있다.
    이 가정을 바탕으로 k=1,2,3... 차례대로 그려보면, dp[k] = 1,2,3,5,8.. 과 같이 값이 나온다.
    즉, 피보나치의 수열과 동일한 알고리즘이다.
 */

class 문제2 {
    public int solution(int n) {

        int DIV = 1000000007;

        long[] dp = new long[n];
        dp[0] = 1;
        dp[1] = 2;
        for(int i=2; i<n; ++i) {
            dp[i] = (dp[i-1] + dp[i-2]) % DIV;
        }

        return (int) dp[n-1];
    }
}